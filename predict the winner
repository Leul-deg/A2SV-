class Solution:
    def PredictTheWinner(self, nums: List[int]) -> bool:
        
        def recursion(p1 = 0, p2=0 , start=0 , end=len(nums)-1 ,turn = True ):
            if start  > end:
                return p1>= p2
            
            if turn :
                a = recursion(p1+nums[start] , p2 , start + 1 , end ,  not turn)
                b = recursion(p1+nums[end] , p2 , start , end - 1 , not turn)
                return a or b
            else:
                c = recursion(p1,nums[start] + p2 , start + 1 , end ,  not turn)
                d = recursion(p1,nums[end] + p2 , start , end - 1 , not turn)
                return  c and  d
        
        recursion()

# class Solution:
#     def PredictTheWinner(self, nums: List[int]) -> bool:
#         def rec(l, r, player_one, player_two, turn):
#             if l > r:
#                 return player_one >= player_two

#             if turn:
#                 return rec(l + 1, r, player_one + nums[l], player_two, False) or rec(l, r - 1, player_one + nums[r], player_two, False)
#             return rec(l + 1, r, player_one, player_two + nums[l], True) and rec(l, r - 1, player_one, player_two + nums[r], True)
#         return rec(0, len(nums) - 1, 0, 0, True)
