# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or not k :
            return head
        length = 0 
        cur = head 
        tail = None
        while cur :
            tail = cur
            length+= 1
            cur = cur.next
        if k == length:
            return head
        k = length -(k % length)-1
        
        
        cur = head
        # new_head = head
        while k :
            cur = cur.next
            k -= 1
        
        new_head = cur.next if cur.next else head
        
        cur.next = None
        
        tail.next = head if head != new_head else None
        
        return new_head
        
        
