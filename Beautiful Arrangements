class Solution:
    def countArrangement(self, n: int) -> int:
        
        
            
            nums  = [i for i in range( 1 ,n  + 1)]
            have = 2**len(nums) -1
            res = 0
            def backtrack(store, have):
                nonlocal res
                if store and store[-1] % len(store) and  len(store) % store[-1]:
                    return
                if not have :

                    res += 1
                    return 

                for idx , num in enumerate(nums):

                    #before using the idxth element check if idx +  1 is on

                    if have>>(idx) & 1:

                        #use the element

                        new = have - (2**idx)
                        store.append(num)

                        backtrack(store.copy() , new )
                        store.pop()

            backtrack([] , have)
            return res
