class Solution:
    def findCircleNum(self, isConnected: List[List[int]]) -> int:
        rows  , cols = len(isConnected) , len(isConnected[0])
        
        d  = defaultdict(list)
        for i in range(rows):
            for j in range(cols):
                if isConnected[i][j]:
                    d[i+1].append(j + 1)
                    d[j + 1].append(i + 1)
        
        visited = set()
        
        def dfs(n):
            if n in visited:
                return
            visited.add(n)
            for a in d[n]:
                dfs(a)
            
            
        res = 0 
        for node in range(1 , len(isConnected) + 1):
            if node not in visited:
                dfs(node)
                res += 1
        
        return res
        
        
